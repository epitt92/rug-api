name: 'Build and push ecr'
description: 'ci action that build and push python code to lambda'
inputs:
  GH_TOKEN:
    description: 'GH_TOKEN to use for terraform modules'
    required: true
    default: 'test'

  aws-region: 
    description: 'aws region'
    required: true
    default: 'eu-west-2'

  role-to-assume:
    description: 'aws role to assume arn'
    required: true
    default: 'arn'
  
  app:
    description: 'app name'
    required: true
    default: 'lambda'

  code-path: 
    description: 'code files path'
    required: true
    default: '/'

  bucket:
    description: 's3 bucket name'
    required: true
    default: 'skip-lists'

  key: 
    description: 's3 bucket key'
    required: true
    default: '/'


runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials from AWS account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.role-to-assume }}
        aws-region: ${{ inputs.aws-region }}
        role-session-name: GitHub-OIDC-TERRAFORM

    - name: install zip
      run: sudo apt-get install -y zip
      shell: bash

    - name: Install dependencies
      working-directory: ${{inputs.code-path}}
      shell: bash
      run: |
        mkdir package
        python3 -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install --target ./package -r requirements.txt; fi

    - name: zip dist
      working-directory: ${{inputs.code-path}}
      shell: bash
      run: |
        cd package
        zip -r ../${{ inputs.app }}.zip .
        cd ..
        zip ${{ inputs.app }}.zip -r ./

    - name: Upload to S3
      working-directory: ${{inputs.code-path}}
      shell: bash
      run: aws s3 cp ${{ inputs.app }}.zip s3://${{ inputs.bucket }}/lambda-artifacts/${{ inputs.key }}/${{ inputs.app }}.zip