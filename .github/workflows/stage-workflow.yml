name: Stage CI/CD

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: 

permissions:
  id-token: write
  contents: read 
  pull-requests: write
  actions: 'read'

env:
  TG_ENV: stage
  ENV: STAGE
  AWS_ROLE: ${{ secrets.STAGE_AWS_ROLE }}

jobs:

  test:
    runs-on: ubuntu-latest
    container: jakediffusion/rug:v1
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: eu-west-2  
          role-session-name: GitHub-OIDC-TERRAFORM
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest
      - name: Test with pytest-cov
        run: |
          coverage run -m pytest ./tests; coverage report -m

  CI:
    name: 'CI'
    runs-on:
      - ubuntu-latest
    needs: [ test ]

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: echo env
        run: echo $TG_ENV

      - name: build rug ml app
        uses: ./.github/actions/build-and-push-ecr
        with: 
          app: rug-ai
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          aws-region: eu-west-2                   
          ecr-repository: ${{ env.TG_ENV }}-default-rug-ai
          dockerfile-path: ./
          role-to-assume: ${{ env.AWS_ROLE }}
          IMAGE_VARIABLE: ${{env.ENV}}_RUG_AI_IMAGE
          gcp_service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: push lambda artifact
        uses: ./.github/actions/build-and-push-lambda
        with: 
          app: cognito-custom-emails
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          aws-region: eu-west-2                   
          role-to-assume: ${{ env.AWS_ROLE }}
          code-path: ./src/v1/auth/email
          bucket: rug-stage-454343598698-build-artifacts
          key: rug-ml/cognito/lambda

  CD: 
    name: 'CD'
    needs: [ CI, test ]
    runs-on: 
      - ubuntu-latest
    container: jakediffusion/rug:v1
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get ecr images
        shell: bash
        id: images
        run: |
          echo "TG_RUG_ECR_IMAGE = $(curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" -H "Accept: application/vnd.github.v3+json"-X GET "https://api.github.com/repos/diffusion-io/rug-api/actions/variables/${{env.ENV}}_RUG_AI_IMAGE" | jq -r ".value")" >> $GITHUB_ENV

      - name: apply terraform
        uses: ./.github/actions/terraform-apply
        with:
          env: ${{ env.TG_ENV }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          role-to-assume: ${{ env.AWS_ROLE }}
